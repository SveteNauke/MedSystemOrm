using System.Linq;
using System.Text;

namespace MedSys.Orm
{
    public sealed class DdlGenerator
    {
        private static string Q(string ident) => PgTypeMapper.Quote(ident);

        public string CreateTableSql(EntityMeta em)
        {
            var sb = new StringBuilder();
            sb.AppendLine($"CREATE TABLE IF NOT EXISTS {Q(em.TableName)} (");

            var lines = new List<string>();

            foreach (var c in em.Columns)
            {
                var ca = c.ColAttr;
                var line = new StringBuilder();

                var sqlType = PgTypeMapper.ToSqlType(c);
                line.Append(Q(c.Name)).Append(' ').Append(sqlType);

                if (c.IsKey)
                {
                    line.Append(" PRIMARY KEY");
                    if (c.KeyAttr!.AutoGenerated)
                        line.Append(" GENERATED ALWAYS AS IDENTITY");
                }
                else
                {
                    var nullable = ca?.Nullable ?? true;
                    line.Append(nullable ? " NULL" : " NOT NULL");

                    if (ca?.Unique == true) line.Append(" UNIQUE");
                    if (!string.IsNullOrWhiteSpace(ca?.DefaultSql))
                        line.Append(" DEFAULT ").Append(ca!.DefaultSql);
                }

                lines.Add(line.ToString());
            }

            foreach (var c in em.Columns.Where(x => x.FkAttr is not null))
            {
                var fk = c.FkAttr!;
                lines.Add($"FOREIGN KEY({Q(c.Name)}) REFERENCES {Q(fk.RefTable)}({Q(fk.RefColumn)}) ON DELETE CASCADE");
            }

            sb.AppendLine("  " + string.Join(",\n  ", lines));
            sb.AppendLine(");");
            return sb.ToString();
        }
    }
}
